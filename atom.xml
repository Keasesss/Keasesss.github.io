<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>K blog</title>
  
  <subtitle>Welcome to K&#39;blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://koxys.top/"/>
  <updated>2017-12-08T03:15:38.000Z</updated>
  <id>http://koxys.top/</id>
  
  <author>
    <name>K</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://koxys.top/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%AE%E9%A1%B6/"/>
    <id>http://koxys.top/Hexo自定义置顶/</id>
    <published>2017-12-07T16:00:00.000Z</published>
    <updated>2017-12-08T03:15:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>因原主题不支持置顶功能，故查询网上资料学了一哈，大致如下<br>以下代码即<br><em>hexo-generator-index\lib\generator.js</em> 中的一段代码</p><p>注释“Top排序”即为需要加入的代码块，其实现其实很简单，就是抽取文章 <em>font-matter</em> 中的 <em>top</em> 属性值进行比较后排序，值大者在前。</p><pre><code>&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals) {  var config = this.config;  var posts = locals.posts.sort(config.index_generator.order_by);  var paginationDir = config.pagination_dir || &apos;page&apos;;  var path = config.index_generator.path || &apos;&apos;;  //Top排序开始  posts.data = posts.data.sort(function(a, b) {      if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义          if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排          else return b.top - a.top; // 否则按照top值降序排      }      else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）          return -1;      }      else if(!a.top &amp;&amp; b.top) {          return 1;      }      else return b.date - a.date; // 都没定义按照文章日期降序排  });  //Top排序结束  return pagination(path, posts, {    perPage: config.index_generator.per_page,    layout: [&apos;index&apos;, &apos;archive&apos;],    format: paginationDir + &apos;/%d/&apos;,    data: {      __index: true    }  });};</code></pre><p><strong>参考：<a href="http://zhwhong.ml/2017/03/23/deal-with-hexo-article-top-problem/" target="_blank" rel="noopener">直接参考</a><br><a href="www.baidu.com">间接参考</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因原主题不支持置顶功能，故查询网上资料学了一哈，大致如下&lt;br&gt;以下代码即&lt;br&gt;&lt;em&gt;hexo-generator-index\lib\generator.js&lt;/em&gt; 中的一段代码&lt;/p&gt;
&lt;p&gt;注释“Top排序”即为需要加入的代码块，其实现其实很简单，就是抽取文章
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World --序言</title>
    <link href="http://koxys.top/hello-world/"/>
    <id>http://koxys.top/hello-world/</id>
    <published>2017-12-06T07:20:47.120Z</published>
    <updated>2017-12-08T03:07:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面：本博客主要记载编程相关内容，兼职扯皮"><a href="#写在前面：本博客主要记载编程相关内容，兼职扯皮" class="headerlink" title="写在前面：本博客主要记载编程相关内容，兼职扯皮"></a>写在前面：本博客主要记载编程相关内容，兼职扯皮</h2><ul><li>欢迎光临神秘商店 <br><br><br>说起为什么要建立本博客，主要还是为了便于记录在学习中的所得所想，本人记忆能力实在着急，字迹更是不堪，且为响应科技强国的号召，<br>故决定自建博客进行记录，那么相信聪明的朋友要问了，那么多博客网站可以用，为什么要自建呢？当然是为了装逼啊：）。</li></ul><hr><h5 id="Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。"><a href="#Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。" class="headerlink" title="Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。"></a><font color="red">Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。<br>可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。</font></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面：本博客主要记载编程相关内容，兼职扯皮&quot;&gt;&lt;a href=&quot;#写在前面：本博客主要记载编程相关内容，兼职扯皮&quot; class=&quot;headerlink&quot; title=&quot;写在前面：本博客主要记载编程相关内容，兼职扯皮&quot;&gt;&lt;/a&gt;写在前面：本博客主要记载编程相关内
      
    
    </summary>
    
    
      <category term="序言" scheme="http://koxys.top/tags/%E5%BA%8F%E8%A8%80/"/>
    
      <category term="中文" scheme="http://koxys.top/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
</feed>
