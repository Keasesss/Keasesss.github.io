<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>K blog</title>
  
  <subtitle>Welcome to K&#39;blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://koxys.top/"/>
  <updated>2017-12-31T07:21:34.000Z</updated>
  <id>http://koxys.top/</id>
  
  <author>
    <name>K</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IDEA使用资料</title>
    <link href="http://koxys.top/IDEA%E4%BD%BF%E7%94%A8%E8%B5%84%E6%96%99/"/>
    <id>http://koxys.top/IDEA使用资料/</id>
    <published>2017-12-27T15:17:51.000Z</published>
    <updated>2017-12-31T07:21:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="以下内容均为网络资源，此文章仅是资源收集"><a href="#以下内容均为网络资源，此文章仅是资源收集" class="headerlink" title="以下内容均为网络资源，此文章仅是资源收集"></a>以下内容均为网络资源，此文章仅是资源收集</h4><p><a href="https://raw.githubusercontent.com/Keasesss/Keasesss.github.io/master/attachments/idea%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B2017-06-01.pdf" target="_blank" rel="noopener">IDEA使用手册</a><br><br><a href="http://blog.csdn.net/lw_power/article/details/51113946" target="_blank" rel="noopener">IDEA中创建web项目相关说明</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;以下内容均为网络资源，此文章仅是资源收集&quot;&gt;&lt;a href=&quot;#以下内容均为网络资源，此文章仅是资源收集&quot; class=&quot;headerlink&quot; title=&quot;以下内容均为网络资源，此文章仅是资源收集&quot;&gt;&lt;/a&gt;以下内容均为网络资源，此文章仅是资源收集&lt;/h4&gt;&lt;
      
    
    </summary>
    
    
      <category term="IDEA" scheme="http://koxys.top/tags/IDEA/"/>
    
      <category term="Collections" scheme="http://koxys.top/tags/Collections/"/>
    
  </entry>
  
  <entry>
    <title>Class对象的获取方法</title>
    <link href="http://koxys.top/Class%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95/"/>
    <id>http://koxys.top/Class对象的获取方法/</id>
    <published>2017-12-08T03:52:59.000Z</published>
    <updated>2017-12-08T04:36:46.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>类名.class获取<br>如 String.class<br>该方法是静态获取，在类的解析阶段获取</p></li><li><p>实例对象.getClass()<br>该方法是动态的，在程序运行时动态获取</p></li><li><p>Static Class.forname(String)<br>该方法动态获取类对象，并使虚拟机动态加载该类</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;类名.class获取&lt;br&gt;如 String.class&lt;br&gt;该方法是静态获取，在类的解析阶段获取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实例对象.getClass()&lt;br&gt;该方法是动态的，在程序运行时动态获取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stati
      
    
    </summary>
    
    
      <category term="Java" scheme="http://koxys.top/tags/Java/"/>
    
      <category term="tips" scheme="http://koxys.top/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>异步、同步与阻塞、非阻塞</title>
    <link href="http://koxys.top/%E5%BC%82%E6%AD%A5%E3%80%81%E5%90%8C%E6%AD%A5%E4%B8%8E%E9%98%BB%E5%A1%9E%E3%80%81%E9%9D%9E%E9%98%BB%E5%A1%9E/"/>
    <id>http://koxys.top/异步、同步与阻塞、非阻塞/</id>
    <published>2017-12-08T03:51:26.000Z</published>
    <updated>2017-12-08T04:37:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="异步、同步、阻塞、非阻塞"><a href="#异步、同步、阻塞、非阻塞" class="headerlink" title="异步、同步、阻塞、非阻塞"></a>异步、同步、阻塞、非阻塞</h3><h4 id="1-异步与同步"><a href="#1-异步与同步" class="headerlink" title="1.异步与同步"></a>1.异步与同步</h4><p>同步简单来说就是对一种通信方式的描述，以HTTP请求为例。<br>指的是在通信的过程中，请求发送给服务器后，服务器由于不能立即返回结果而导致通信的结果无法立即响应，而请求方不能立即得到响应的方式。</p><p>异步则是相对同步来说的另外一种通信方式，即服务器在接受到请求的同时立即做出响应或者不响应，尽管可能并不能返回需要的结果，但是浏览器端会立即放下本次通信，而服务器在随后会在得到正确的结果之后再次发送响应给予浏览器需要的结果。在此期间浏览器也可以再次发送请求查询进度。</p><h4 id="2-阻塞与非阻塞"><a href="#2-阻塞与非阻塞" class="headerlink" title="2.阻塞与非阻塞"></a>2.阻塞与非阻塞</h4><p>所谓阻塞与非阻塞，其实和同步与异步的描述对象是完全不一样的。以HTTP为例，阻塞与非阻塞描述的是在浏览器在等待响应时的真空期线程所采取的行为，阻塞即是线程挂起，不执行其他行为，而是等待响应结果，非阻塞则是线程不只等待，而是会去执行其他任务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;异步、同步、阻塞、非阻塞&quot;&gt;&lt;a href=&quot;#异步、同步、阻塞、非阻塞&quot; class=&quot;headerlink&quot; title=&quot;异步、同步、阻塞、非阻塞&quot;&gt;&lt;/a&gt;异步、同步、阻塞、非阻塞&lt;/h3&gt;&lt;h4 id=&quot;1-异步与同步&quot;&gt;&lt;a href=&quot;#1-异步与同
      
    
    </summary>
    
    
      <category term="tips" scheme="http://koxys.top/tags/tips/"/>
    
      <category term="coding" scheme="http://koxys.top/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的坑s</title>
    <link href="http://koxys.top/Hexo%E7%9A%84%E5%9D%91s/"/>
    <id>http://koxys.top/Hexo的坑s/</id>
    <published>2017-12-08T03:44:16.000Z</published>
    <updated>2017-12-08T04:37:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于hexo配置中的坑"><a href="#关于hexo配置中的坑" class="headerlink" title="关于hexo配置中的坑"></a>关于hexo配置中的坑</h3><h5 id="在搭建hexo时，运行-hexo-d-指令的时候，在已经安装了hexo-deployer-git之后总是出现ERROR-Deployer-not-found-git-。在网上查了很久试了无数方法，无果，非常难受，无意间在github中看见一网友的回复中提到了要在配置文件中加上"><a href="#在搭建hexo时，运行-hexo-d-指令的时候，在已经安装了hexo-deployer-git之后总是出现ERROR-Deployer-not-found-git-。在网上查了很久试了无数方法，无果，非常难受，无意间在github中看见一网友的回复中提到了要在配置文件中加上" class="headerlink" title="在搭建hexo时，运行 $ hexo d 指令的时候，在已经安装了hexo-deployer-git之后总是出现ERROR Deployer not found: git 。在网上查了很久试了无数方法，无果，非常难受，无意间在github中看见一网友的回复中提到了要在配置文件中加上"></a>在搭建hexo时，运行 $ hexo d 指令的时候，在已经安装了hexo-deployer-git之后总是出现ERROR Deployer not found: git 。在网上查了很久试了无数方法，无果，非常难受，无意间在github中看见一网友的回复中提到了要在配置文件中加上</h5><pre><code>plugins: -hexo-server -hexo-deployer-git</code></pre><p>试了一下，成功了T T,悲喜交集…..</p><h5 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h5><p>发现原来原因是package.jason中没标识相关依赖，在yml中设置会有bug，所以下载node_module的时候要在blog文件中install –save而不是-g</p><ul><li>npm小知识</li><li>npm install -g 全局下载</li><li>npm install 直接在当前文件夹下载</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;关于hexo配置中的坑&quot;&gt;&lt;a href=&quot;#关于hexo配置中的坑&quot; class=&quot;headerlink&quot; title=&quot;关于hexo配置中的坑&quot;&gt;&lt;/a&gt;关于hexo配置中的坑&lt;/h3&gt;&lt;h5 id=&quot;在搭建hexo时，运行-hexo-d-指令的时候，在已经安
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://koxys.top/tags/Hexo/"/>
    
      <category term="BUG and DEBUG" scheme="http://koxys.top/tags/BUG-and-DEBUG/"/>
    
  </entry>
  
  <entry>
    <title>有关在Github中取用图片的资源</title>
    <link href="http://koxys.top/%E6%9C%89%E5%85%B3%E5%9C%A8Github%E4%B8%AD%E5%AD%98%E5%8F%96%E5%9B%BE%E7%89%87%E7%9A%84%E8%B5%84%E6%BA%90/"/>
    <id>http://koxys.top/有关在Github中存取图片的资源/</id>
    <published>2017-12-08T03:36:06.000Z</published>
    <updated>2017-12-08T04:38:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>近日，我搭blog时要用图片，发现很多主题的background-image都不能使用，在尝试过很多方法，如相对路径、绝对路径、直接复制磁盘路径均无效，之后只能用github资源<br><strong>（此问题待解决）</strong></p><p>在github中push了几个图片后直接复制url无效，经研究发现问题如下：</p><p>在github中载入图片应当使用其download的url，而该url与项目中打开的url是不一致的，无法拼接出来，必须点击 <em>download</em> 按钮进入相关界面才能获取其url</p><p>另：该url其实是有规律的，不过我懒，不打算记。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;近日，我搭blog时要用图片，发现很多主题的background-image都不能使用，在尝试过很多方法，如相对路径、绝对路径、直接复制磁盘路径均无效，之后只能用github资源&lt;br&gt;&lt;strong&gt;（此问题待解决）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在github中pus
      
    
    </summary>
    
    
      <category term="BUG and DEBUG" scheme="http://koxys.top/tags/BUG-and-DEBUG/"/>
    
      <category term="Github" scheme="http://koxys.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo自定义置顶功能实现</title>
    <link href="http://koxys.top/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%AE%E9%A1%B6/"/>
    <id>http://koxys.top/Hexo自定义置顶/</id>
    <published>2017-12-07T16:00:00.000Z</published>
    <updated>2017-12-08T03:28:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>因原主题不支持置顶功能，故查询网上资料学了一哈，大致如下<br>以下代码即<br><em>hexo-generator-index\lib\generator.js</em> 中的一段代码</p><p>注释“Top排序”即为需要加入的代码块，其实现其实很简单，就是抽取文章 <em>font-matter</em> 中的 <em>top</em> 属性值进行比较后排序，值大者在前。</p><pre><code>&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals) {  var config = this.config;  var posts = locals.posts.sort(config.index_generator.order_by);  var paginationDir = config.pagination_dir || &apos;page&apos;;  var path = config.index_generator.path || &apos;&apos;;  //Top排序开始  posts.data = posts.data.sort(function(a, b) {      if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义          if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排          else return b.top - a.top; // 否则按照top值降序排      }      else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）          return -1;      }      else if(!a.top &amp;&amp; b.top) {          return 1;      }      else return b.date - a.date; // 都没定义按照文章日期降序排  });  //Top排序结束  return pagination(path, posts, {    perPage: config.index_generator.per_page,    layout: [&apos;index&apos;, &apos;archive&apos;],    format: paginationDir + &apos;/%d/&apos;,    data: {      __index: true    }  });};</code></pre><p><strong>参考：<a href="http://zhwhong.ml/2017/03/23/deal-with-hexo-article-top-problem/" target="_blank" rel="noopener">直接参考</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://baidu.com" target="_blank" rel="noopener">间接参考</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因原主题不支持置顶功能，故查询网上资料学了一哈，大致如下&lt;br&gt;以下代码即&lt;br&gt;&lt;em&gt;hexo-generator-index\lib\generator.js&lt;/em&gt; 中的一段代码&lt;/p&gt;
&lt;p&gt;注释“Top排序”即为需要加入的代码块，其实现其实很简单，就是抽取文章
      
    
    </summary>
    
      <category term="Hexo" scheme="http://koxys.top/categories/Hexo/"/>
    
      <category term="功能实现" scheme="http://koxys.top/categories/Hexo/%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    
    
      <category term="Hexo" scheme="http://koxys.top/tags/Hexo/"/>
    
      <category term="功能实现" scheme="http://koxys.top/tags/%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World --序言</title>
    <link href="http://koxys.top/hello-world/"/>
    <id>http://koxys.top/hello-world/</id>
    <published>2017-12-06T07:20:47.120Z</published>
    <updated>2017-12-11T12:50:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面：本博客主要记载编程相关内容，兼职扯皮"><a href="#写在前面：本博客主要记载编程相关内容，兼职扯皮" class="headerlink" title="写在前面：本博客主要记载编程相关内容，兼职扯皮"></a>写在前面：本博客主要记载编程相关内容，兼职扯皮</h2><ul><li>欢迎光临神秘商店 <br><br><br>说起为什么要建立本博客，主要还是为了便于记录在学习中的所得所想，本人记忆能力实在着急，字迹更是不堪，且为响应科技强国的号召，<br>故决定自建博客进行记录，那么相信聪明的朋友要问了，那么多博客网站可以用，为什么要自建呢？当然是为了装逼啊：）。</li></ul><p><br><br>Update:最近本想把以前的纸质资料整理下发上来的，结果做了一篇感觉没有那个必要。对于比较系统的如JDBC的基本使用这样的东西，心情好的时候可以看文档，心情不好可以google后者baidu,加之要整理并上传确实比较费时费力，没有那个必要，故本博客还是以零碎的日常内容为主。</p><hr><h5 id="Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。"><a href="#Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。" class="headerlink" title="Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。"></a><font color="red">Warning：本博客主要记录个人日常所得，内容偏口语、重日常，比较琐碎，且条理性一般。<br>可能有系统性的内容，不过这个“可能”和“系统”的数值与本人“懒惰”程度有关。</font></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面：本博客主要记载编程相关内容，兼职扯皮&quot;&gt;&lt;a href=&quot;#写在前面：本博客主要记载编程相关内容，兼职扯皮&quot; class=&quot;headerlink&quot; title=&quot;写在前面：本博客主要记载编程相关内容，兼职扯皮&quot;&gt;&lt;/a&gt;写在前面：本博客主要记载编程相关内
      
    
    </summary>
    
      <category term="序言" scheme="http://koxys.top/categories/%E5%BA%8F%E8%A8%80/"/>
    
    
      <category term="序言" scheme="http://koxys.top/tags/%E5%BA%8F%E8%A8%80/"/>
    
      <category term="中文" scheme="http://koxys.top/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
</feed>
